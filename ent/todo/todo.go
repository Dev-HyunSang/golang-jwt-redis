// Code generated by ent, DO NOT EDIT.

package todo

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the todo type in the database.
	Label = "to_do"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTodoUUID holds the string denoting the todo_uuid field in the database.
	FieldTodoUUID = "todo_uuid"
	// FieldUserUUID holds the string denoting the user_uuid field in the database.
	FieldUserUUID = "user_uuid"
	// FieldTodoTitle holds the string denoting the todo_title field in the database.
	FieldTodoTitle = "todo_title"
	// FieldTodoContext holds the string denoting the todo_context field in the database.
	FieldTodoContext = "todo_context"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCratedAt holds the string denoting the crated_at field in the database.
	FieldCratedAt = "crated_at"
	// Table holds the table name of the todo in the database.
	Table = "to_dos"
)

// Columns holds all SQL columns for todo fields.
var Columns = []string{
	FieldID,
	FieldTodoUUID,
	FieldUserUUID,
	FieldTodoTitle,
	FieldTodoContext,
	FieldUpdatedAt,
	FieldCratedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultTodoUUID holds the default value on creation for the "todo_uuid" field.
	DefaultTodoUUID func() uuid.UUID
	// DefaultUserUUID holds the default value on creation for the "user_uuid" field.
	DefaultUserUUID func() uuid.UUID
)
